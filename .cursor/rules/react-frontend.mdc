# React 프론트엔드 개발 가이드

## 🎨 UI/UX 가이드라인
HairMatch는 모바일 우선 웹앱으로 다음을 준수합니다:

### 📱 모바일 최적화
```tsx
// ✅ 모든 페이지는 mobile-container 클래스 사용
<div className="mobile-container">
  {/* 최대 너비 384px, 중앙 정렬 */}
</div>

// ✅ Safe Area 지원
<div className="safe-top pt-8 pb-4">
<div className="safe-bottom p-6">
```

### 🎨 디자인 시스템 ([index.css](mdc:frontend/src/index.css))
```tsx
// 버튼 컴포넌트
<button className="btn-primary">주 액션</button>
<button className="btn-secondary">보조 액션</button>

// 카드 컴포넌트  
<div className="card">
  {/* 백그라운드 흰색, 둥근 모서리, 그림자 */}
</div>

// 업로드 영역
<div className="upload-area">
  {/* 드래그 앤 드롭 지원 영역 */}
</div>
```

## 🛣️ 라우팅 및 상태 관리

### 페이지 네비게이션
```tsx
// ✅ React Router state를 활용한 데이터 전달
const navigate = useNavigate()

navigate('/next-page', {
  state: {
    gender: 'female',
    selectedImage: file,
    analysisResult: result
  }
})

// ✅ 상태 받기
const location = useLocation()
const { gender, analysisResult } = location.state || {}
```

### 필수 데이터 검증
```tsx
// ✅ 페이지 진입 시 필수 데이터 검증
if (!gender || !analysisResult) {
  navigate('/')  // 홈으로 리다이렉트
  return null
}
```

## 🔧 API 연동 ([api.ts](mdc:frontend/src/services/api.ts))

### 얼굴형 분석
```tsx
import { faceAnalysisApi } from '../services/api'

const result = await faceAnalysisApi.analyzeFace(imageFile)
```

### 헤어스타일 추천
```tsx
import { recommendationApi } from '../services/api'

const recommendations = await recommendationApi.getHairStyleRecommendations(
  analysisResult.faceShape,
  gender
)
```

## 📋 컴포넌트 구조

### 페이지 컴포넌트 패턴
```tsx
const MyPage = () => {
  // 1. 상태 및 네비게이션 설정
  const navigate = useNavigate()
  const location = useLocation()
  
  // 2. 데이터 검증
  if (!requiredData) {
    navigate('/')
    return null
  }
  
  // 3. 이벤트 핸들러
  const handleNext = () => {
    navigate('/next', { state: { data } })
  }
  
  // 4. JSX 반환
  return (
    <div className="mobile-container">
      {/* 헤더, 메인, 버튼 순서 */}
    </div>
  )
}
```

### 진행 상황 표시
```tsx
// ✅ 4단계 프로세스 진행률 표시
<div className="flex items-center space-x-2">
  <div className="w-3 h-3 bg-primary-600 rounded-full"></div>  {/* 완료 */}
  <div className="w-3 h-3 bg-primary-600 rounded-full"></div>  {/* 현재 */}
  <div className="w-3 h-3 bg-gray-200 rounded-full"></div>     {/* 미완료 */}
  <div className="w-3 h-3 bg-gray-200 rounded-full"></div>
</div>
```

## 🖼️ 이미지 처리

### 파일 업로드
```tsx
const handleFileSelect = (file: File) => {
  if (file && file.type.startsWith('image/')) {
    const reader = new FileReader()
    reader.onload = (e) => {
      setImagePreview(e.target?.result as string)
    }
    reader.readAsDataURL(file)
  }
}
```

### 드래그 앤 드롭
```tsx
const handleDrop = (e: React.DragEvent) => {
  e.preventDefault()
  const file = e.dataTransfer.files[0]
  if (file) {
    handleFileSelect(file)
  }
}
```

## ⚡ 성능 최적화
- 이미지는 적절한 크기로 리사이즈
- API 호출 시 로딩 상태 표시
- 에러 처리로 사용자 경험 향상
